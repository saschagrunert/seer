---
sudo: false

language: generic

cache:
  directories:
    - $HOME/.ghc
    - $HOME/.cabal
    - $HOME/.stack

matrix:
  include:
    - env: ARGS=""
      compiler: ": default (linux)"
      addons: {apt: {packages: [libgmp-dev]}}
    - env: ARGS="--resolver lts-9"
      compiler: ": 8.0.2 (linux)"
      addons: {apt: {packages: [libgmp-dev]}}
    - env: ARGS=""
      compiler: ": default (macOS)"
      os: osx
    - env: ARGS="--resolver lts-9"
      compiler: ": 8.0.2 (macOS)"
      os: osx

before_install:
  # Using compiler above sets CC to an invalid value, so unset it
  - unset CC

  # Download and unpack the stack executable
  - export PATH=/opt/ghc/$GHCVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$PATH
  - mkdir -p ~/.local/bin
  - |
    if [ `uname` = "Darwin" ]
    then
      travis_retry curl --insecure -L \
        https://www.stackage.org/stack/osx-x86_64 \
          | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
    else
      travis_retry curl -L \
        https://www.stackage.org/stack/linux-x86_64 \
          | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
    fi

    # Use the more reliable S3 mirror of Hackage
    mkdir -p $HOME/.cabal
    echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' \
      > $HOME/.cabal/config
    echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

install:
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - if [ -f configure.ac ]; then autoreconf -i; fi
  - |
    set -ex
    # Add in extra-deps for older snapshots, as necessary
    stack --no-terminal --install-ghc $ARGS test --bench --dry-run || ( \
      stack --no-terminal $ARGS build cabal-install && \
      stack --no-terminal $ARGS solver --update-config)

    # Build the dependencies
    stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies

    # Install doctest
    stack --no-terminal install doctest
    set +ex

script:
  - |
    set -ex
    stack --no-terminal $ARGS test \
      --bench --no-run-benchmarks --haddock --no-haddock-deps --coverage
    if [[ "$ARGS" == "" ]]; then
      find src -name "*.hs" | xargs stack exec doctest -- -isrc
    fi
    set +ex
